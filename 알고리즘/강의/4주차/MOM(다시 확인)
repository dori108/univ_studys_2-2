k번째 작은 수 선택
mom 알고리즘

quick select 알고리즘의 최악의 경우를 살펴보면 pivot보다 작은 값들과 큰 값들의 갯수 차이가 매우 커지는 경우이다.
피봇을 고르는 것을 신중히 하면 없앨 수 있는 문제이다. 즉 다음과 같은 조건을 만족하는 피봇을 고른다.
A <p
B >p
M =p

위 조건을 만족하는 피봇을 고르는데 필요한 시간을 P라고 해보자 피봇과 비교해서 A,B,M으로 나누는 과정에서의 비교횟수는 n을 넘지 않는다.
전체 만족을 위해 비교하는 횟수는 n을 넘지 않기 때문에 전체 비교횟수 T(n)의 점화식은
T(n)=T(n/c)+P+n 
p도 n에 비례한다면 T(n)=T(n/c)+dn이 되어 T(n)=O(n)이 된다.

MOM은 피봇을 신중히 골라 c=4/3의 값을 만족하도록 할 수도 있다. 리스트 L에 저장되 n개의 값들을 차례로 보면 5개의 중간값을 6번 비교로 찾는다.
그러면 n/5개의 중간 값에 대한 중간 값을 재귀적으로 구할 수 있다.

이 시간은 T(n/5)이기 때문에 p=T(n/5)이다

나머지 단계는 quick selection 알고리즘과 동일하다.
따라서 수행시간은 T(n)=T(3n/4)+T(n/5)+11n/5

mom 알고리즘의 수행시간 계산과 구체적인 숫자들이 왜 등장하는지에 대해서 더 연구해볼 필요 있음

