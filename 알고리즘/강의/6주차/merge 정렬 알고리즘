import random
def merge_sort(A, first, last): # merge sort A[first] ~ A[last]
    if first >= last: return
    middle = (first+last)//2
    merge_sort(A, first, middle)
    merge_sort(A, middle+1, last)
    B = []
    i = first
    j = middle+1
    while i <= middle and j <= last:
        if A[i] <= A[j]:
            B.append(A[i])
            i += 1
        else:
            B.append(A[j])
            j += 1

    for i in range(i, middle+1): B.append(A[i])
    for j in range(j, last+1): B.append(A[j])
    for k in range(first, last+1): A[k] = B[k-first]

# test
random.seed()
A = [random.randint(1, 100) for x in range(10)]
print(A)
merge_sort(A, 0, len(A)-1)
print(A)


수행 시간
T(n) n개의 값을 머지하는데 걸리는  시간 
1. n/2로 나눠 머지 소트 -> 2T(n/2)
2. n/2개의 정렬된 값으로 이루어진  정렬된 값들을 머지
: 두 리스트를 왼쪽에서 오른쪽으로 비교하면서 병합하기 때문에 값은 최대 한번씩만 비교에 참여함

O(nlogn)
